# - Config file for the @PKG_NAME@ package.
#
# For finding and loading @PKG_NAME@ from your project, type:
#
# find_package(@PROJECT_NAME_LOWER@@PROJECT_MAJOR_VERSION@)
#
# It defines the following variables:
#
#  @PROJECT_NAME_LOWER@@PROJECT_MAJOR_VERSION@_FOUND       - System has @PKG_NAME@.
#  @PKG_NAME@_INCLUDE_DIRS - include directories for @PKG_NAME@ and its dependencies.
#  @PKG_NAME@_LIBRARY_DIRS - Paths in which the linker should search for libraries.
#  @PKG_NAME@_LIBRARIES    - Libraries to link against.
#  @PKG_NAME@_CXX_FLAGS    - Compiler flags for compiling C++ sources.
#  @PKG_NAME@_LDFLAGS      - Linker flags.

include (FindPkgConfig REQUIRED)

if (@PKG_NAME@_CONFIG_INCLUDED)
  return()
endif()
set(@PKG_NAME@_CONFIG_INCLUDED TRUE)

@PACKAGE_INIT@

if(NOT TARGET @PROJECT_LIBRARY_TARGET_NAME@)
  include("${CMAKE_CURRENT_LIST_DIR}/@cmake_targets_file@")
endif()

list(APPEND @PKG_NAME@_CXX_FLAGS -std=c++11)
if ("${CMAKE_CXX_COMPILER_ID} " MATCHES "Clang ")
  set(@PKG_NAME@_CXX_FLAGS "${@PKG_NAME@_CXX_FLAGS} -stdlib=libc++")
endif ()

# On windows we produce .dll libraries with no prefix
if (WIN32)
 set(CMAKE_FIND_LIBRARY_PREFIXES "")
 set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib" ".dll")
endif()

# Compatibility
set(@PKG_NAME@_LIBRARIES @PROJECT_LIBRARY_TARGET_NAME@)
set(@PKG_NAME@_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR_FULL@")
set(@PKG_NAME@_LIBRARY_DIRS "@PACKAGE_LIB_INSTALL_DIR@")
set(@PKG_NAME@_LDFLAGS      "-L@PACKAGE_LIB_INSTALL_DIR@")

find_package(ignition-math@IGNITION-MATH_REQUIRED_MAJOR_VERSION@ REQUIRED)
